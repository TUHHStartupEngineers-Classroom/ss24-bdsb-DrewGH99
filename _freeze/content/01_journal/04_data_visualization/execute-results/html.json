{
  "hash": "bed1eddf1196eb69cfed161036800149",
  "result": {
    "markdown": "---\ntitle: \"Data Visualization\"\nauthor: \"Drew Gilmore\"\n---\n\n\n# Challenge 1\n\n::: {.cell hash='04_data_visualization_cache/html/unnamed-chunk-1_4a79bdb428511d12979167801b8b7758'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(here)\nlibrary(scales)\n\n\nlibrary(tidyverse)\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n\n#create location vector\nlocation_levels <- c(\n  \"Germany\", \"Spain\", \"France\", \n  \"United Kingdom\", \"United States\")\n\n#filter by locations\ncovid_data_tbl_2 <- covid_data_tbl %>%\n filter(location %in% location_levels) \n\n#determine max number of cases in USA to display\nmax_cases_us <- covid_data_tbl_2 %>%\n  filter(location == \"United States\") %>%\n  arrange(desc(total_cases)) %>%\n  head(n = 1)\n\n\nplot_cases_by_country <- covid_data_tbl_2 %>% \n  ggplot(aes(date, total_cases, color = location)) +\n  geom_smooth(method = \"loess\", span = 0.2, se = FALSE) +\n  scale_x_date(name = NULL, date_breaks = \"1 year\", date_labels = \"%Y\") +\n  scale_y_continuous(name = \"Cumulative Cases\", labels = comma) +\n  scale_color_brewer(palette = \"YlOrBr\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\") +\n  labs(color = \"Country\", title = \"Cumulative COVID-19 Cases Over Time\",\n       subtitle = \"Data for Germany, Spain, France, United Kingdom, and United States\") +\n  geom_label(data = max_cases_us, label = \"103,436,829\", show.legend = FALSE, vjust = -.1)\n\nplot(plot_cases_by_country)\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n# Challenge 2\n\n::: {.cell hash='04_data_visualization_cache/html/plot_c305b7ddd6a34c3d6342a9280b0fd357'}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(maps)\n\n# Read data\ncovid_data_tbl <- read_csv(\"https://covid.ourworldindata.org/data/owid-covid-data.csv\")\n\n# Data manipulation\ncovid_data_tbl_3 <- covid_data_tbl %>% \n  filter(!is.na(continent)) %>% #filter to only include countries\n  group_by(location) %>%\n  summarize(mortality_rate = max((total_deaths / population), na.rm = TRUE)) %>% #calculate mortality rate\n  ungroup() %>%\n  mutate(location = case_when(\n    location == \"United Kingdom\" ~ \"UK\",\n    location == \"United States\" ~ \"USA\",\n    location == \"Democratic Republic of Congo\" ~ \"Democratic Republic of the Congo\",\n    TRUE ~ location\n  )) %>%\n  distinct()\n\n# World map data\nworld <- map_data(\"world\")\n\n# Merge data, re-order column names\nWorld_covid <- merge(covid_data_tbl_3, world, by.x = \"location\", by.y = \"region\", all.x = TRUE) %>%\n  select(long, lat, group, order, location, subregion, mortality_rate) %>%\n  arrange(order)\n\n# adjusting column names\ncolnames(World_covid) <- c(\"long\", \"lat\", \"group\", \"order\", \"id\", \"subregion\", \"mortality_rate\")\n\n# Plotting\ngg <- ggplot(World_covid)\ngg <- gg + geom_map(data = world, map = world, aes(map_id = region), \n                    fill = \"white\", color = \"#7f7f7f\", size = 0.25)\ngg <- gg + geom_map(map = World_covid, aes(map_id = id, fill = mortality_rate), size = 0.25)\ngg <- gg + scale_fill_gradient(low = \"red\", high = \"black\", name = \"Mortality Rate\")\ngg <- gg + expand_limits(x = World_covid$long, y = World_covid$lat)\ngg <- gg + labs(x = \"\", y = \"\", title = \"Covid Mortality Rate by country\")\ngg <- gg + theme(panel.grid = element_blank(), panel.border = element_blank())\ngg <- gg + theme(axis.ticks = element_blank(), axis.text = element_blank())\ngg <- gg + theme(legend.position = \"bottom\")\ngg\n```\n\n::: {.cell-output-display}\n![](04_data_visualization_files/figure-html/plot-1.png){width=672}\n:::\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}